path <- "../../data/ADNI/ADNI_baseline2.csv"
data <- read.csv(path, header = TRUE)
path <- "../../Data/ADNI/AD.csv"
data <- read.csv(path, header = TRUE)
path <- "../Data/ADNI/AD.csv"
data <- read.csv(path, header = TRUE)
getwd()
path <- "../Data/AD.csv"
data <- read.csv(path, header = TRUE)
target_indx <- which( colnames(data) == "DX_bl" )
data[,target_indx] <- as.factor(paste0("c", data[,target_indx]))
rm_indx <-  which( colnames(data) %in% c("ID","TOTAL13","MMSCORE") )
data <- data[,-rm_indx]
tree <- rpart( DX_bl ~ ., data)
library(rpart)
library(rpart.plot)
library(dplyr)
library(tidyr)
library(ggplot2)
library(partykit)
path <- "../Data/AD.csv"
data <- read.csv(path, header = TRUE)
target_indx <- which( colnames(data) == "DX_bl" )
data[,target_indx] <- as.factor(paste0("c", data[,target_indx]))
rm_indx <-  which( colnames(data) %in% c("ID","TOTAL13","MMSCORE") )
data <- data[,-rm_indx]
tree <- rpart( DX_bl ~ ., data)
rpart.plot(tree,fallen.leaves=FALSE)
text=getURL("https://github.com/shuailab/ind_498/blob/master/resource/data/AD.csv")
require(RCurl)
text=getURL("https://github.com/shuailab/ind_498/blob/master/resource/data/AD.csv")
text
y <- read.csv(text=getURL("https://github.com/shuailab/ind_498/blob/master/resource/data/AD.csv"))
summary(y)
y <- read.csv(text=getURL("https://github.com/shuailab/ind_498/blob/master/resource/data/AD.csv"), skip=7, header=T)
summary(y)
y <- read.csv(text=getURL("https://github.com/shuailab/ind_498/blob/master/resource/data/AD.csv?raw=True"), skip=7, header=T)
y <- read.csv(text=getURL("https://github.com/shuailab/ind_498/blob/master/resource/data/AD.csv?raw=True"))
summary(y)
y
y <- read.csv(text=getURL("https://raw.githubusercontent.com/shuailab/ind_498/master/resource/data/AD.csv"))
summary(y)
data1 <- read.csv(text=getURL("https://raw.githubusercontent.com/shuailab/ind_498/master/resource/data/AD.csv"))
summary(data1)
summary(Data)
path <- "../Data/AD.csv"
data <- read.csv(path, header = TRUE)
summary(data)
knitr::opts_chunk$set(echo = TRUE)
library(RCurl)
AD <- read.csv(text=getURL("https://raw.githubusercontent.com/shuailab/ind_498/master/resource/data/AD_hd.csv"))
str(AD)
AD <- read.csv(text=getURL("https://raw.githubusercontent.com/shuailab/ind_498/master/resource/data/AD.csv"))
install.packages("aod")
install.packages("mosaic")
install.packages("vcd")
install.packages("popbio")
install.packages("Hmisc")
install.packages(c("caret", "e1071"))
install.packages("ROCR")
install.packages("kernlab")
install.packages("manipulate")
knitr::opts_chunk$set(echo = TRUE)
require( 'manipulate' )
install.packages(c("factoextra", "FactoMineR", "ggfortify"))
install.packages("corrplot")
library(rpart)
library(rpart.plot)
library(dplyr)
library(tidyr)
library(ggplot2)
library(RCurl)
library(partykit)
theme_set(theme_gray(base_size = 15) )
AD <- read.csv(text=getURL("https://raw.githubusercontent.com/shuailab/ind_498/master/resource/data/AD2.csv"))
str(AD)
AD_demo <- subset(AD, select=c("MMSCORE", "AGE","PTGENDER","PTEDUCAT","ID"))
AD_demo <- subset(AD, select=c("MMSCORE", "AGE","PTGENDER","PTEDUCAT"))
AD_demo
tree <- rpart( MMSCORE ~ ., AD_demo)
tree
prp(tree,nn.cex=1)
summary(tree)
print(tree)
rpart.plot(tree,fallen.leaves=FALSE,type=0,xcompact=TRUE,compact=TRUE)
rpart.plot(tree,fallen.leaves=FALSE,type=0,xcompact=TRUE)
tree <- rpart( MMSCORE ~ ., AD_demo)
# rpart.plot(tree,fallen.leaves=FALSE,type=0,xcompact=TRUE,compact=TRUE)
prp(tree,nn.cex=1)
summary(tree)
print(tree)
prp(tree,nn.cex=1)
tree <- rpart( MMSCORE ~ ., AD)
# rpart.plot(tree,fallen.leaves=FALSE,type=0,xcompact=TRUE)
prp(tree,nn.cex=1)
print(tree)
rpart.plot(tree,fallen.leaves=FALSE,type=0,xcompact=TRUE)
summary(tree)
tree <- rpart( MMSCORE ~ ., AD, method="anova")
# rpart.plot(tree,fallen.leaves=FALSE,type=0,xcompact=TRUE)
prp(tree,nn.cex=1)
print(tree)
printcp(tree)
str(AD)
AD <- read.csv(text=getURL("https://raw.githubusercontent.com/shuailab/ind_498/master/resource/data/AD2.csv"))
tree <- rpart( MMSCORE ~ ., AD, method="anova")
# rpart.plot(tree,fallen.leaves=FALSE,type=0,xcompact=TRUE)
prp(tree,nn.cex=1)
AD_demo <- subset(AD, select=c("MMSCORE", "AGE","PTGENDER","PTEDUCAT"))
tree <- rpart( MMSCORE ~ ., AD_demo, method="anova")
prp(tree,nn.cex=1)
tree <- rpart( MMSCORE ~ ., AD, method="anova")
prp(tree,nn.cex=1)
AD_full <- AD[,c(1:16)]
AD_full
AD_full <- AD[,c(1:16)]
tree <- rpart( MMSCORE ~ ., AD_full, method="anova")
prp(tree,nn.cex=1)
rm(list=ls(all=TRUE))
library(rpart)
library(dplyr)
library(ggplot2)
library(randomForest)
Sigma <- matrix(c(1,0,0,1),2,2)
data <- mvrnorm(n = 1000, rep(0, 2), Sigma)
library(MASS)
Sigma <- matrix(c(1,0,0,1),2,2)
data <- mvrnorm(n = 1000, rep(0, 2), Sigma)
data
sigma <- matrix(c(1,0,0,1),2,2)
data <- mvrnorm(n = 500, rep(0, 2), sigma)
data
?randomForest
randomForest(data)
rf <- randomForest(data)
rf
summary(rf)
rf$proximity
prox <- rf$proximity
dim(prox)
library(cluster)
pam(prox, 3)
clusters <- pam(prox, 3)
clusters
summary(clusters)
att(clusters)
attr(clusters)
clusters$id.med
clusters$clustering
data$cluster <- clusters$clustering
data
sigma <- matrix(c(1,0,0,1),2,2)
data <- mvrnorm(n = 500, rep(0, 2), sigma)
rf <- randomForest(data)
prox <- rf$proximity
clusters <- pam(prox, 3)
clusters$clustering
data$cluster <- clusters$clustering
data$cluster <- as.numeric(clusters$clustering)
sigma <- matrix(c(1,0,0,1),2,2)
data <- mvrnorm(n = 500, rep(0, 2), sigma)
rf <- randomForest(data)
prox <- rf$proximity
clusters <- pam(prox, 3)
data$cluster <- as.numeric(clusters$clustering)
sigma <- matrix(c(1,0,0,1),2,2)
data <- mvrnorm(n = 500, rep(0, 2), sigma)
rf <- randomForest(data)
prox <- rf$proximity
clusters <- pam(prox, 3)
data
data <- as.data.frame(data)
data$cluster <- as.numeric(clusters$clustering)
data
ggplot(data,aes(x=V1,y=V2,color=cluster))+geom_point() #+labs(title = "Data points")
sigma <- matrix(c(1,0,0,1),2,2)
data1 <- mvrnorm(n = 500, rep(0, 2), sigma)
data2 <- mvrnorm(n = 500, rep(1, 2), sigma)
data <- rbind(data1,data2)
rf <- randomForest(data)
prox <- rf$proximity
clusters <- pam(prox, 3)
data <- as.data.frame(data)
data$cluster <- as.numeric(clusters$clustering)
ggplot(data,aes(x=V1,y=V2,color=cluster))+geom_point() #+labs(title = "Data points")
